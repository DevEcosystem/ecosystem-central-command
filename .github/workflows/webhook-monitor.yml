name: 🔍 Repository Monitor

on:
  # Monitor all organization events via GitHub API polling
  schedule:
    - cron: '*/5 * * * *'  # Every 5 minutes - faster detection
  
  # Manual trigger for immediate check
  workflow_dispatch:
    inputs:
      force_check:
        description: 'Force immediate repository check'
        required: false
        default: 'true'
        type: boolean

  # External webhook trigger
  repository_dispatch:
    types: [repository-created, repository-deleted, repository-updated]

env:
  NODE_VERSION: '18'

jobs:
  monitor-repositories:
    name: 🔍 Monitor Repository Changes
    runs-on: ubuntu-latest
    
    permissions:
      contents: write
      actions: read
      
    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PERSONAL_GITHUB_TOKEN || secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📦 Install Dependencies
        run: npm ci --only=production

      - name: 🔍 Check for Repository Changes
        id: check_changes
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_GITHUB_TOKEN || secrets.GITHUB_TOKEN }}
        run: |
          echo "🔍 Checking for new repositories across organizations..."
          
          # Store current repository count
          if [ -f "docs/ecosystem-config.json" ]; then
            CURRENT_COUNT=$(jq -r '.totals.total_repositories // 0' docs/ecosystem-config.json)
          else
            CURRENT_COUNT=0
          fi
          echo "Current repository count: $CURRENT_COUNT"
          
          # Run discovery to get latest count
          node automation/ecosystem-auto-discovery.js
          
          # Get new count
          NEW_COUNT=$(jq -r '.totals.total_repositories // 0' docs/ecosystem-config.json)
          echo "New repository count: $NEW_COUNT"
          
          # Check if count changed
          if [ "$NEW_COUNT" -gt "$CURRENT_COUNT" ]; then
            echo "changes_detected=true" >> $GITHUB_OUTPUT
            echo "old_count=$CURRENT_COUNT" >> $GITHUB_OUTPUT
            echo "new_count=$NEW_COUNT" >> $GITHUB_OUTPUT
            echo "✅ Repository changes detected!"
          else
            echo "changes_detected=false" >> $GITHUB_OUTPUT
            echo "ℹ️ No repository changes detected"
          fi

      - name: 🚀 Trigger Full Ecosystem Sync
        if: steps.check_changes.outputs.changes_detected == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_GITHUB_TOKEN || secrets.GITHUB_TOKEN }}
        run: |
          echo "🚀 Repository changes detected - triggering full ecosystem sync..."
          echo "📊 Repositories: ${{ steps.check_changes.outputs.old_count }} → ${{ steps.check_changes.outputs.new_count }}"
          
          # Run complete ecosystem sync
          node automation/ecosystem-auto-sync.js
          
          echo "✅ Ecosystem sync completed successfully!"

      - name: 📊 Update Monitoring Log
        if: always()
        run: |
          # Create monitoring log entry
          TIMESTAMP=$(date -u +"%Y-%m-%dT%H:%M:%S.%3NZ")
          LOG_DIR="docs/logs"
          LOG_FILE="$LOG_DIR/repository-monitor.log"
          
          mkdir -p "$LOG_DIR"
          
          echo "{
            \"timestamp\": \"$TIMESTAMP\",
            \"trigger\": \"${{ github.event_name }}\",
            \"changes_detected\": ${{ steps.check_changes.outputs.changes_detected || false }},
            \"repository_count\": {
              \"previous\": ${{ steps.check_changes.outputs.old_count || 0 }},
              \"current\": ${{ steps.check_changes.outputs.new_count || 0 }}
            },
            \"status\": \"${{ job.status }}\"
          }" >> "$LOG_FILE"
          
          echo "📝 Monitoring log updated"

      - name: 🔔 Notify on Changes
        if: steps.check_changes.outputs.changes_detected == 'true'
        run: |
          echo "## 🎉 Repository Changes Detected!" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Change Summary:**" >> $GITHUB_STEP_SUMMARY
          echo "- Previous count: ${{ steps.check_changes.outputs.old_count }}" >> $GITHUB_STEP_SUMMARY
          echo "- New count: ${{ steps.check_changes.outputs.new_count }}" >> $GITHUB_STEP_SUMMARY
          echo "- Added repositories: $((${{ steps.check_changes.outputs.new_count }} - ${{ steps.check_changes.outputs.old_count }}))" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Actions Taken:**" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Full ecosystem sync executed" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ README files updated" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Statistics refreshed" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "🚀 **Ecosystem is now fully up-to-date!**" >> $GITHUB_STEP_SUMMARY

  # Cleanup old monitoring logs
  cleanup-logs:
    name: 🧹 Cleanup Old Logs
    runs-on: ubuntu-latest
    needs: monitor-repositories
    if: always()
    
    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PERSONAL_GITHUB_TOKEN || secrets.GITHUB_TOKEN }}

      - name: 🧹 Clean Old Monitor Logs
        run: |
          LOG_FILE="docs/logs/repository-monitor.log"
          
          if [ -f "$LOG_FILE" ]; then
            # Keep only last 100 lines
            tail -n 100 "$LOG_FILE" > "${LOG_FILE}.tmp"
            mv "${LOG_FILE}.tmp" "$LOG_FILE"
            
            echo "📝 Monitor log cleaned (kept last 100 entries)"
          fi