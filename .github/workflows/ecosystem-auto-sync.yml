name: 🔄 Ecosystem Auto-Sync

on:
  # Scheduled daily sync
  schedule:
    - cron: '0 6 * * *'  # Daily at 6:00 AM UTC

  # Manual trigger
  workflow_dispatch:
    inputs:
      force_sync:
        description: 'Force complete resync'
        required: false
        default: 'false'
        type: boolean
      skip_push:
        description: 'Skip git push (dry run)'
        required: false
        default: 'false'
        type: boolean

  # Repository webhook events
  repository_dispatch:
    types: [ecosystem-sync]

  # Push to main (for configuration changes)
  push:
    branches: [main]
    paths:
      - 'automation/**'
      - 'docs/ecosystem-config.json'

env:
  NODE_VERSION: '18'
  ECOSYSTEM_MODE: 'production'

jobs:
  ecosystem-auto-sync:
    name: 🚀 Complete Ecosystem Sync
    runs-on: ubuntu-latest
    
    permissions:
      contents: write
      actions: read
      
    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📦 Install Dependencies
        run: |
          npm ci --only=production
          npm install @octokit/rest

      - name: 🔍 Repository Auto-Discovery
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "🔍 Starting repository auto-discovery..."
          node automation/ecosystem-auto-discovery.js
          echo "✅ Auto-discovery completed"

      - name: 📊 GitHub Stats Collection
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "📊 Collecting GitHub language statistics..."
          node automation/github-stats-collector.js
          echo "✅ Stats collection completed"

      - name: 📝 README Generation
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "📝 Generating all README files..."
          node automation/universal-readme-manager.js
          echo "✅ README generation completed"

      - name: 🔄 Complete Auto-Sync
        id: sync
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          AUTO_COMMIT: ${{ github.event.inputs.skip_push != 'true' }}
          AUTO_PUSH: ${{ github.event.inputs.skip_push != 'true' }}
          FORCE_SYNC: ${{ github.event.inputs.force_sync }}
        run: |
          echo "🔄 Running complete ecosystem auto-sync..."
          node automation/ecosystem-auto-sync.js
          
          # Set output for summary
          if [ -f "docs/logs/ecosystem-sync-results.json" ]; then
            total_repos=$(jq -r '.steps.discovery.result.total_repositories // "Unknown"' docs/logs/ecosystem-sync-results.json)
            echo "total_repositories=$total_repos" >> $GITHUB_OUTPUT
            
            success=$(jq -r '.success' docs/logs/ecosystem-sync-results.json)
            echo "sync_success=$success" >> $GITHUB_OUTPUT
          fi

      - name: 📋 Upload Sync Reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ecosystem-sync-reports
          path: |
            docs/logs/ecosystem-sync-report.md
            docs/logs/ecosystem-sync-results.json
            docs/logs/auto-sync.log
          retention-days: 30

      - name: 🔔 Notify on Failure
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            const issue_body = `## 🚨 Ecosystem Auto-Sync Failed
            
            **Workflow**: ${context.workflow}
            **Run ID**: ${context.runId}
            **Triggered by**: ${context.eventName}
            **Time**: ${new Date().toISOString()}
            
            ### Action Required
            - Check the [workflow logs](${context.payload.repository.html_url}/actions/runs/${context.runId})
            - Review sync reports in artifacts
            - Investigate any configuration or API issues
            
            ### Auto-generated by GitHub Actions
            `;
            
            github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `🚨 Ecosystem Auto-Sync Failed - ${new Date().toISOString().split('T')[0]}`,
              body: issue_body,
              labels: ['automation', 'bug', 'high-priority']
            });

      - name: 📊 Job Summary
        if: always()
        run: |
          echo "## 🔄 Ecosystem Auto-Sync Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Trigger**: ${{ github.event_name }}" >> $GITHUB_STEP_SUMMARY
          echo "**Time**: $(date -u)" >> $GITHUB_STEP_SUMMARY
          echo "**Status**: ${{ job.status }}" >> $GITHUB_STEP_SUMMARY
          
          if [ -f "docs/logs/ecosystem-sync-results.json" ]; then
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "### 📈 Sync Results" >> $GITHUB_STEP_SUMMARY
            
            success=$(jq -r '.success' docs/logs/ecosystem-sync-results.json)
            total_steps=$(jq -r '.steps | length' docs/logs/ecosystem-sync-results.json)
            successful_steps=$(jq -r '[.steps[] | select(.success == true)] | length' docs/logs/ecosystem-sync-results.json)
            
            echo "- **Success**: $success" >> $GITHUB_STEP_SUMMARY
            echo "- **Steps completed**: $successful_steps/$total_steps" >> $GITHUB_STEP_SUMMARY
            
            if [ "${{ steps.sync.outputs.total_repositories }}" != "" ]; then
              echo "- **Repositories processed**: ${{ steps.sync.outputs.total_repositories }}" >> $GITHUB_STEP_SUMMARY
            fi
            
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "### 📋 Reports" >> $GITHUB_STEP_SUMMARY
            echo "- Full sync report available in workflow artifacts" >> $GITHUB_STEP_SUMMARY
            echo "- Logs stored in \`docs/logs/\`" >> $GITHUB_STEP_SUMMARY
          fi

  # Webhook notification job
  notify-completion:
    name: 🔔 Notify Completion
    runs-on: ubuntu-latest
    needs: ecosystem-auto-sync
    if: always() && (github.event_name == 'schedule' || github.event_name == 'workflow_dispatch')
    
    steps:
      - name: 📥 Checkout for Notification
        uses: actions/checkout@v4

      - name: 🔔 Send Success Notification
        if: needs.ecosystem-auto-sync.result == 'success'
        run: |
          echo "✅ Ecosystem Auto-Sync completed successfully"
          # Add webhook notifications here if needed
          
      - name: 🚨 Send Failure Notification  
        if: needs.ecosystem-auto-sync.result == 'failure'
        run: |
          echo "❌ Ecosystem Auto-Sync failed"
          # Add webhook notifications here if needed