#!/bin/bash

# Live GitHub Deployment Script
# Deploy the enhanced README to DevPersonalHub/external-learning-platforms

echo "🚀 Live GitHub Deployment to DevPersonalHub/external-learning-platforms"
echo "========================================================================="

if [ -z "$GITHUB_TOKEN" ]; then
    echo "❌ GITHUB_TOKEN not set. Please set it first:"
    echo "export GITHUB_TOKEN=\"your_token_here\""
    exit 1
fi

echo "✅ GitHub token is set"
echo "📁 Reading generated README content..."

# Read the generated README
readme_content=$(cat "/Users/Mea/code/github-ecosystem/ecosystem-central-command/generated-readmes/external-learning-platforms-README.md")

if [ -z "$readme_content" ]; then
    echo "❌ Generated README not found. Run universal-readme-manager.js first."
    exit 1
fi

echo "✅ README content loaded (${#readme_content} characters)"

# Get current README SHA (required for updates)
echo "🔍 Getting current README information..."
current_readme=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
    "https://api.github.com/repos/DevPersonalHub/external-learning-platforms/contents/README.md")

sha=$(echo "$current_readme" | grep '"sha"' | sed 's/.*"sha": *"\([^"]*\)".*/\1/')

if [ -z "$sha" ]; then
    echo "📝 No existing README found - will create new one"
    create_mode=true
else
    echo "✅ Found existing README (SHA: ${sha:0:7}...)"
    create_mode=false
fi

# Encode content to base64 (required by GitHub API)
echo "🔄 Encoding content for GitHub API..."
encoded_content=$(echo "$readme_content" | base64)

# Prepare API payload
if [ "$create_mode" = true ]; then
    # Create new README
    payload=$(cat <<EOF
{
  "message": "🎓 Add comprehensive external learning platforms README

✨ Features:
- Enhanced repository structure with emoji visualization
- Comprehensive learning analytics across 3 platforms
- Professional presentation of 12+ projects
- Detailed technical stack progression
- Meta Coursera, Recursion, and Udacity integration

🤖 Auto-generated by Universal README Management",
  "content": "$encoded_content"
}
EOF
)
else
    # Update existing README
    payload=$(cat <<EOF
{
  "message": "🚀 Update external learning platforms README

✨ Enhanced with:
- Emoji-enhanced repository structure visualization
- Updated project counts and technology stacks
- Comprehensive learning analytics
- Professional presentation improvements

🤖 Auto-generated by Universal README Management",
  "content": "$encoded_content",
  "sha": "$sha"
}
EOF
)
fi

echo "🚀 Deploying to GitHub..."

# Deploy to GitHub
response=$(curl -s -X PUT \
    -H "Authorization: token $GITHUB_TOKEN" \
    -H "Accept: application/vnd.github.v3+json" \
    -d "$payload" \
    "https://api.github.com/repos/DevPersonalHub/external-learning-platforms/contents/README.md")

# Check if deployment was successful
if echo "$response" | grep -q '"commit"'; then
    echo "✅ SUCCESS! README deployed to DevPersonalHub/external-learning-platforms"
    echo "🌐 View at: https://github.com/DevPersonalHub/external-learning-platforms"
    echo ""
    echo "📊 Deployment Details:"
    echo "$response" | grep -E '"html_url"|"download_url"' | head -2
    echo ""
    echo "🎉 Pilot deployment complete!"
    echo "📋 Next: Monitor for 24-48 hours, then proceed with Phase 2A rollout"
else
    echo "❌ Deployment failed. Response:"
    echo "$response"
    exit 1
fi