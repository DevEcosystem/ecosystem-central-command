#!/bin/bash

# Simple GitHub Deployment Script
# Deploy the enhanced README to DevPersonalHub/external-learning-platforms

echo "🚀 Live GitHub Deployment to DevPersonalHub/external-learning-platforms"
echo "========================================================================="

if [ -z "$GITHUB_TOKEN" ]; then
    echo "❌ GITHUB_TOKEN not set. Please set it first:"
    echo "export GITHUB_TOKEN=\"your_token_here\""
    exit 1
fi

echo "✅ GitHub token is set"

# Read the generated README
readme_file="/Users/Mea/code/github-ecosystem/ecosystem-central-command/generated-readmes/external-learning-platforms-README.md"

if [ ! -f "$readme_file" ]; then
    echo "❌ Generated README not found at: $readme_file"
    exit 1
fi

echo "✅ README file found"
echo "📁 Content size: $(wc -c < "$readme_file") characters"

# Get current README SHA (required for updates)
echo "🔍 Getting current README information..."
current_readme_response=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
    "https://api.github.com/repos/DevPersonalHub/external-learning-platforms/contents/README.md")

echo "$current_readme_response" > /tmp/current_readme.json

# Extract SHA using a more reliable method
sha=$(echo "$current_readme_response" | python3 -c "
import json, sys
try:
    data = json.load(sys.stdin)
    print(data.get('sha', ''))
except:
    print('')
")

if [ -z "$sha" ]; then
    echo "📝 No existing README found or unable to get SHA - will try to create new one"
    create_mode=true
else
    echo "✅ Found existing README (SHA: ${sha:0:7}...)"
    create_mode=false
fi

# Use Python to handle the API call properly
echo "🚀 Deploying to GitHub..."

python3 << EOF
import requests
import base64
import json

# Read the README content
with open('$readme_file', 'r', encoding='utf-8') as f:
    content = f.read()

# Encode to base64
encoded_content = base64.b64encode(content.encode('utf-8')).decode('utf-8')

# Prepare the API request
url = 'https://api.github.com/repos/DevPersonalHub/external-learning-platforms/contents/README.md'
headers = {
    'Authorization': 'token $GITHUB_TOKEN',
    'Accept': 'application/vnd.github.v3+json',
    'Content-Type': 'application/json'
}

# Prepare payload
payload = {
    'message': '🎓 Update external learning platforms README\\n\\n✨ Enhanced with:\\n- Emoji-enhanced repository structure visualization\\n- Updated project counts and technology stacks\\n- Comprehensive learning analytics\\n- Professional presentation improvements\\n\\n🤖 Auto-generated by Universal README Management',
    'content': encoded_content
}

# Add SHA if updating existing file
if '$create_mode' != 'true':
    payload['sha'] = '$sha'

# Make the API request
try:
    response = requests.put(url, headers=headers, json=payload)
    
    if response.status_code in [200, 201]:
        print('✅ SUCCESS! README deployed to DevPersonalHub/external-learning-platforms')
        print('🌐 View at: https://github.com/DevPersonalHub/external-learning-platforms')
        print('')
        result = response.json()
        print(f'📊 Commit SHA: {result.get("commit", {}).get("sha", "N/A")[:7]}...')
        print('🎉 Pilot deployment complete!')
        print('📋 Next: Monitor for 24-48 hours, then proceed with Phase 2A rollout')
    else:
        print(f'❌ Deployment failed. Status: {response.status_code}')
        print(f'Response: {response.text}')
        exit(1)
        
except Exception as e:
    print(f'❌ Error during deployment: {e}')
    exit(1)
EOF