#!/bin/bash

# Curl-based GitHub Deployment Script
# Deploy the enhanced README to DevPersonalHub/external-learning-platforms

echo "🚀 Live GitHub Deployment to DevPersonalHub/external-learning-platforms"
echo "========================================================================="

if [ -z "$GITHUB_TOKEN" ]; then
    echo "❌ GITHUB_TOKEN not set. Please set it first:"
    echo "export GITHUB_TOKEN=\"your_token_here\""
    exit 1
fi

echo "✅ GitHub token is set"

# Read the generated README
readme_file="/Users/Mea/code/github-ecosystem/ecosystem-central-command/generated-readmes/external-learning-platforms-README.md"

if [ ! -f "$readme_file" ]; then
    echo "❌ Generated README not found at: $readme_file"
    exit 1
fi

echo "✅ README file found"
echo "📁 Content size: $(wc -c < "$readme_file") characters"

# Get current README SHA
echo "🔍 Getting current README information..."
sha=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
    "https://api.github.com/repos/DevPersonalHub/external-learning-platforms/contents/README.md" | \
    grep '"sha"' | head -1 | sed 's/.*"sha": *"\([^"]*\)".*/\1/')

if [ -z "$sha" ]; then
    echo "📝 No existing README found - will create new one"
    sha_param=""
else
    echo "✅ Found existing README (SHA: ${sha:0:7}...)"
    sha_param=", \"sha\": \"$sha\""
fi

# Encode content to base64 using built-in base64 command
echo "🔄 Encoding content for GitHub API..."
encoded_content=$(base64 -i "$readme_file" | tr -d '\n')

# Create JSON payload using here document
echo "📝 Creating API payload..."
cat > /tmp/github_payload.json << EOF
{
  "message": "🎓 Update external learning platforms README\n\n✨ Enhanced with:\n- Emoji-enhanced repository structure visualization\n- Updated project counts and technology stacks\n- Comprehensive learning analytics\n- Professional presentation improvements\n\n🤖 Auto-generated by Universal README Management",
  "content": "$encoded_content"$sha_param
}
EOF

echo "🚀 Deploying to GitHub..."

# Deploy using curl with the JSON file
response=$(curl -s -X PUT \
    -H "Authorization: token $GITHUB_TOKEN" \
    -H "Accept: application/vnd.github.v3+json" \
    -H "Content-Type: application/json" \
    -d @/tmp/github_payload.json \
    "https://api.github.com/repos/DevPersonalHub/external-learning-platforms/contents/README.md")

# Check if deployment was successful
if echo "$response" | grep -q '"commit"'; then
    echo "✅ SUCCESS! README deployed to DevPersonalHub/external-learning-platforms"
    echo "🌐 View at: https://github.com/DevPersonalHub/external-learning-platforms"
    echo ""
    commit_sha=$(echo "$response" | grep '"sha"' | head -1 | sed 's/.*"sha": *"\([^"]*\)".*/\1/')
    echo "📊 Commit SHA: ${commit_sha:0:7}..."
    echo ""
    echo "🎉 Pilot deployment complete!"
    echo "📋 Next: Monitor for 24-48 hours, then proceed with Phase 2A rollout"
    
    # Clean up
    rm -f /tmp/github_payload.json
else
    echo "❌ Deployment failed. Response:"
    echo "$response"
    echo ""
    echo "Debug: Checking payload file..."
    echo "First 200 chars of payload:"
    head -c 200 /tmp/github_payload.json
    rm -f /tmp/github_payload.json
    exit 1
fi